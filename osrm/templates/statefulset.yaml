apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "osrm.fullname" . }}
  labels:
{{ include "osrm.labels" . | indent 4 }}
spec:
  serviceName: {{ include "osrm.fullname" . }}-headless
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "osrm.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "osrm.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
        - name: map-downloader
          image: busybox:1.28
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - /scripts/download.sh
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: maps
              mountPath: /data/maps
        - name: map-extractor
          image: osrm/osrm-backend:v5.22.0
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - /scripts/extract.sh
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: maps
              mountPath: /data/maps
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - osrm-routed
            - --algorithm
            - mld
            - /data/maps/{{ include "osrm.map-filename-osrm" . }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          resources: {{ toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: maps
              mountPath: /data/maps
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: scripts
          configMap:
            name: {{ include "osrm.fullname" . }}-scripts
      {{- if not .Values.persistence.enabled }}
        - name: maps
          emptyDir: {}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: maps
      spec:
        accessModes:
          {{- toYaml .Values.persistence.accessModes | nindent 10 }}
        {{- if .Values.persistence.storageClassName }}
        {{- if (eq "-" .Values.persistence.storageClassName) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.persistence.storageClassName }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
  {{- end }}
